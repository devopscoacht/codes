pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'Sonar-Qube-Server' // The name of your SonarQube installation
        SCANNER_HOME = tool name: 'sonar-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation' // Ensure this matches the name of your SonarQube Scanner installation
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/devopscoacht/youtube-clone'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('Sonar-Qube-Server') {
                    sh "${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectKey=your_project_key"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        error "Pipeline aborted due to quality gate failure: ${qg.status}"
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}